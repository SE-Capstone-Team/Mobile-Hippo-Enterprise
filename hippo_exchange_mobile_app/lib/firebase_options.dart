// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_auth/firebase_auth.dart';
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        return macos;
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyBTnDlSA66bRNn0gVkoeXA1XhnPT8Nv_zY',
    appId: '1:589325248066:web:02f7c607905c4c3e68efdb',
    messagingSenderId: '589325248066',
    projectId: 'csc-4610-470418',
    authDomain: 'csc-4610-470418.firebaseapp.com',
    storageBucket: 'csc-4610-470418.firebasestorage.app',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyADR7YcoPPiK8n-664voLvdTlsbxqrYbU0',
    appId: '1:589325248066:android:e04d951ba00db70768efdb',
    messagingSenderId: '589325248066',
    projectId: 'csc-4610-470418',
    storageBucket: 'csc-4610-470418.firebasestorage.app',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyAcNX0GS6gQGQYr1KgIii-zGhwZ--IUqh8',
    appId: '1:589325248066:ios:5217b2cf0d30421868efdb',
    messagingSenderId: '589325248066',
    projectId: 'csc-4610-470418',
    storageBucket: 'csc-4610-470418.firebasestorage.app',
    iosClientId: '589325248066-2nki0iv04ff2huehi7dugl4h4lvkmahs.apps.googleusercontent.com',
    iosBundleId: 'com.example.hippoExchangeMobileApp',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyAcNX0GS6gQGQYr1KgIii-zGhwZ--IUqh8',
    appId: '1:589325248066:ios:5217b2cf0d30421868efdb',
    messagingSenderId: '589325248066',
    projectId: 'csc-4610-470418',
    storageBucket: 'csc-4610-470418.firebasestorage.app',
    iosClientId: '589325248066-2nki0iv04ff2huehi7dugl4h4lvkmahs.apps.googleusercontent.com',
    iosBundleId: 'com.example.hippoExchangeMobileApp',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'AIzaSyBTnDlSA66bRNn0gVkoeXA1XhnPT8Nv_zY',
    appId: '1:589325248066:web:cff7ff60debc3f6d68efdb',
    messagingSenderId: '589325248066',
    projectId: 'csc-4610-470418',
    authDomain: 'csc-4610-470418.firebaseapp.com',
    storageBucket: 'csc-4610-470418.firebasestorage.app',
  );


  void createUser(String emailAddress, String password) async {
    try {
      final credential = await FirebaseAuth.instance.createUserWithEmailAndPassword(
        email: emailAddress,
        password: password,
      );
    } on FirebaseAuthException catch (e) {
      if (e.code == 'weak-password') {
        print('The password provided is too weak.');
      } else if (e.code == 'email-already-in-use') {
        print('The account already exists for that email.');
      }
    } catch (e) {
      print(e);
    }
  }
  void loginUser(String emailAddress, String password) async {
    try {
      final credential = await FirebaseAuth.instance.signInWithEmailAndPassword(
          email: emailAddress,
          password: password
      );
    } on FirebaseAuthException catch (e) {
      if (e.code == 'user-not-found') {
        print('No user found for that email.');
      } else if (e.code == 'wrong-password') {
        print('Wrong password provided for that user.');
      }
    }

  }

}
